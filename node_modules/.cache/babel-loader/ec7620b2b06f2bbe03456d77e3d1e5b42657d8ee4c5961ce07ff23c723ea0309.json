{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Typescript individuell\\\\Typescript-individuell\\\\src\\\\components\\\\CommentList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentList = () => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState({\n    id: 0,\n    thread: 0,\n    content: '',\n    creator: {\n      id: 0,\n      name: '',\n      userName: ''\n    }\n  });\n  useEffect(() => {\n    const savedComments = JSON.parse(localStorage.getItem('comments') || '[]');\n    setComments(savedComments);\n  }, []);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewComment({\n      ...newComment,\n      [name]: value,\n      creator: {\n        ...newComment.creator,\n        [name]: value\n      }\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent the default form submission behavior\n\n    if (newComment.content && newComment.creator.name && newComment.creator.userName) {\n      const newCommentData = {\n        ...newComment,\n        id: Date.now()\n      };\n      const updatedComments = [...comments, newCommentData];\n\n      // Save the updated posts to localStorage\n      localStorage.setItem('comments', JSON.stringify(updatedComments));\n      setComments(updatedComments);\n\n      // Clear the input fields by resetting newPost\n      setNewComment({\n        id: 0,\n        thread: 0,\n        content: '',\n        creator: {\n          id: 0,\n          name: '',\n          userName: ''\n        }\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      id: \"comment-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"commentInput\",\n          type: \"name\",\n          name: \"name\",\n          id: \"name\",\n          value: newComment.creator.name,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"userName\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"commentInput\",\n          type: \"userName\",\n          name: \"userName\",\n          id: \"userName\",\n          value: newComment.creator.userName,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"comment\",\n          id: \"comment-label\",\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"commentInput\",\n          type: \"content\",\n          title: \"content \",\n          name: \"content\",\n          id: \"content\",\n          value: newComment.content,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"commentButton\",\n          id: \"commentButton\",\n          children: \"Send comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), comments.map(function (comment) {\n      console.log(\"comments\", comment.creator);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment\",\n        id: \"comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", comment.content]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Creator name: \", comment.creator.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Username: \", comment.creator.userName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, comment.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentList, \"A+dQfrRbrA/GHAcOpxaoWtnzx00=\");\n_c = CommentList;\nexport default CommentList;\nvar _c;\n$RefreshReg$(_c, \"CommentList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CommentList","_s","comments","setComments","newComment","setNewComment","id","thread","content","creator","name","userName","savedComments","JSON","parse","localStorage","getItem","handleInputChange","e","value","target","handleSubmit","preventDefault","newCommentData","Date","now","updatedComments","setItem","stringify","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","onChange","title","map","comment","console","log","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Typescript individuell/Typescript-individuell/src/components/CommentList.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CommentList = () => {\r\n  const [comments, setComments] = useState<PostComment[]>([]);\r\n  const [newComment, setNewComment] = useState<PostComment>({\r\n    id: 0,\r\n    thread: 0,\r\n    content: '',\r\n    creator: {\r\n      id: 0,\r\n      name: '',\r\n      userName: '',\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    const savedComments = JSON.parse(localStorage.getItem('comments') || '[]');\r\n    setComments(savedComments);\r\n  }, []);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    const { name, value } = e.target;\r\n    setNewComment({\r\n      ...newComment,\r\n      [name]: value,\r\n      creator: {\r\n        ...newComment.creator,\r\n        [name]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault(); // Prevent the default form submission behavior\r\n  \r\n    if (newComment.content && newComment.creator.name && newComment.creator.userName) {\r\n      const newCommentData: PostComment = { ...newComment, id: Date.now() };\r\n      const updatedComments = [...comments, newCommentData];\r\n  \r\n      // Save the updated posts to localStorage\r\n      localStorage.setItem('comments', JSON.stringify(updatedComments));\r\n  \r\n      setComments(updatedComments);\r\n  \r\n      // Clear the input fields by resetting newPost\r\n      setNewComment({\r\n        id: 0,\r\n        thread: 0,\r\n        content: '',\r\n        creator: {\r\n          id: 0,\r\n          name: '',\r\n          userName: '',\r\n        },\r\n      });\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n    <div className='comment' id='comment-field'>\r\n      <h3>Comments</h3>\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"name\">Name</label>\r\n      <input className=\"commentInput\" type=\"name\" name=\"name\" id=\"name\" value={newComment.creator.name} onChange={handleInputChange}/>\r\n      <label htmlFor=\"userName\">Username</label>\r\n      <input className=\"commentInput\" type=\"userName\" name=\"userName\" id=\"userName\" value={newComment.creator.userName} onChange={handleInputChange}/>\r\n      <label htmlFor=\"comment\" id='comment-label'>Comment</label>\r\n      <input className=\"commentInput\" type=\"content\" title=\"content \"name=\"content\" id=\"content\" value={newComment.content} onChange={handleInputChange}/>\r\n      <button className='commentButton' id='commentButton'>Send comment</button>\r\n    </form>\r\n    </div>\r\n    {comments.map(function(comment){\r\n            console.log(\"comments\", comment.creator)\r\n    return (<div key={comment.id} className=\"comment\" id=\"comment\">\r\n                <p>Description: {comment.content}</p>\r\n                <p>Creator name: {comment.creator.name}</p>\r\n                <p>Username: {comment.creator.userName}</p>\r\n              </div>)})}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommentList\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}